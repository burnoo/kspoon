name: Release Library

on:
  workflow_dispatch:

env:
  ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
  ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
  ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
  ORG_GRADLE_PROJECT_isRelease: true

permissions:
  contents: write

jobs:
  release:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Setup jq
        uses: dcarbone/install-jq-action@v3

      - name: Publish artifact to Sonatype Repository
        id: publish
        run: ./gradlew publishAllPublicationsToSonatypeRepository

      - name: Notify Sonatype Central to process artifacts
        run: |
          curl -X POST \
            -u "${{ secrets.SONATYPE_USERNAME }}:${{ secrets.SONATYPE_PASSWORD }}" \
            -H "Content-Type: application/json" \
            "https://ossrh-staging-api.central.sonatype.com/manual/upload/defaultRepository/dev.burnoo?publishing_type=automatic"

      - name: Extract version from build.gradle.kts
        id: extract_version
        run: |
          version=$(sed -n 's/.*version = "\([0-9.]*\).*/\1/p' kspoon/build.gradle.kts)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.TOKEN_RELEASES }}
          tag: ${{ env.VERSION }}
          commit: ${{ github.sha }}
          generateReleaseNotes: true
          makeLatest: true
